{"mappings":"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,G,O,E,E,E,EAKiB,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,KAJlB,GAAG,CAAC,SAAC,CAAA,CAAO,CAAzB,EAAkC,OAAA,EAAM,GAAG,CAAC,SAAA,CAAV,EAAiB,OAAA,CAAG,CAAC,EAAK,A,E,GAMnD,EAAM,EAAG,EArGN,EAqGmB,IAC7B,IAAK,IAAI,EAAO,EAAG,EAAO,EAAW,IACnC,GAAI,CAAK,CAAC,EAAI,CAAC,EAAK,GAAK,CAAK,CAAC,EAAI,CAAC,EAAO,EAAE,EAC1C,CAAW,CAAC,EAAI,CAAC,EAAK,GAAK,CAAW,CAAC,EAAI,CAAC,EAAO,EAAE,CACtD,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,CAAA,KAgH6B,KACzB,EAAY,SAAS,CAAC,MAAM,CAAC,UAEjC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar field = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar button = document.querySelector(\"button\");\nvar start = document.querySelector(\".start\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageStart = document.querySelector(\".message-start\");\nvar rowsArr = document.querySelectorAll(\".field-row\");\nvar cellsArr = document.querySelectorAll(\".field-cell\");\nvar gameScore = document.querySelector(\".game-score\");\nvar pointsToWin = 2048;\nvar width = 4;\nvar result = 0;\nfunction gameBeginning() {\n    field = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    launchingRandom();\n    launchingRandom();\n}\nfunction empty() {\n    for(var row = 0; row < width; row++)for(var cell = 0; cell < width; cell++){\n        if (field[row][cell] === 0) return true;\n    }\n    return false;\n}\nfunction withoutZero(quadrates) {\n    return quadrates.filter(function(item) {\n        return item > 0;\n    });\n}\nvar squareValue = function(place, num) {\n    place.classList = \"field-cell--\".concat(num, \" field-cell\");\n    if (num === 0) place.innerText = \"\";\n    if (num > 0) place.innerText = num;\n    if (num === pointsToWin) messageWin.classList.remove(\"hidden\");\n};\nfunction launchingRandom() {\n    if (empty() === false) return;\n    var noEmptySpaces = false;\n    while(noEmptySpaces === false){\n        var x = Math.floor(Math.random() * width);\n        var y = Math.floor(Math.random() * width);\n        if (field[x][y] === 0) {\n            var place = rowsArr[x].children[y];\n            if (Math.random() > 0.9) {\n                field[x][y] = 4;\n                squareValue(place, 4);\n            } else {\n                field[x][y] = 2;\n                squareValue(place, 2);\n            }\n            noEmptySpaces = true;\n        }\n    }\n}\nfunction connection(row) {\n    var arr = withoutZero(row);\n    for(var i = 0; i < arr.length; i++)if (arr[i] === arr[i + 1]) {\n        arr[i] += arr[i + 1];\n        arr[i + 1] = 0;\n        result += arr[i];\n    }\n    gameScore.innerHTML = result;\n    arr = withoutZero(arr);\n    while(arr.length < width)arr.push(0);\n    return arr;\n}\nfunction invert(items) {\n    return items.map(function(value, cell) {\n        return items.map(function(row) {\n            return row[cell];\n        });\n    });\n}\nfunction checkConnection() {\n    var invertField = invert(_to_consumable_array(field));\n    for(var row = 0; row < width; row++)for(var cell = 0; cell < width - 1; cell++){\n        if (field[row][cell] === field[row][cell + 1] || invertField[row][cell] === invertField[row][cell + 1]) return true;\n    }\n    return false;\n}\nfunction moveRight() {\n    for(var row = 0; row < width; row++){\n        var el = field[row].reverse();\n        var elAfterInvert = connection(el).reverse();\n        for(var cell = 0; cell < width; cell++){\n            field[row] = elAfterInvert;\n            var place = rowsArr[row].children[cell];\n            var number = field[row][cell];\n            squareValue(place, number);\n        }\n    }\n}\nfunction moveLeft() {\n    for(var row = 0; row < width; row++){\n        var el = field[row];\n        var elAfterInvert = connection(el);\n        for(var cell = 0; cell < width; cell++){\n            field[row] = elAfterInvert;\n            var place = rowsArr[row].children[cell];\n            var number = field[row][cell];\n            squareValue(place, number);\n        }\n    }\n}\nfunction moveUp() {\n    var _loop = function(cell) {\n        var el = field.map(function(item) {\n            return item[cell];\n        });\n        var elAfterInvert = connection(el);\n        for(var row = 0; row < width; row++){\n            field[row][cell] = elAfterInvert[row];\n            var place = rowsArr[row].children[cell];\n            var number = field[row][cell];\n            squareValue(place, number);\n        }\n    };\n    for(var cell = 0; cell < width; cell++)_loop(cell);\n}\nfunction moveDown() {\n    var _loop = function(cell) {\n        var el = field.map(function(item) {\n            return item[cell];\n        }).reverse();\n        var elAfterInvert = connection(el).reverse();\n        for(var row = 0; row < width; row++){\n            field[row][cell] = elAfterInvert[row];\n            var place = rowsArr[row].children[cell];\n            var number = field[row][cell];\n            squareValue(place, number);\n        }\n    };\n    for(var cell = 0; cell < width; cell++)_loop(cell);\n}\nstart.addEventListener(\"click\", function() {\n    if (start.classList.contains(\"start\")) {\n        start.classList.remove(\"start\");\n        start.classList.add(\"restart\");\n        start.innerHTML = \"Restart\";\n        messageStart.classList.add(\"hidden\");\n        gameBeginning();\n    }\n    if (start.classList.contains(\"restart\")) {\n        cellsArr.forEach(function(i) {\n            return squareValue(i, 0);\n        });\n        messageLose.classList.add(\"hidden\");\n        result = 0;\n        gameScore.innerHTML = result;\n        gameBeginning();\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if (button.innerText === \"Start\") return;\n    switch(e.key){\n        case \"ArrowRight\":\n            moveRight();\n            launchingRandom();\n            break;\n        case \"ArrowLeft\":\n            moveLeft();\n            launchingRandom();\n            break;\n        case \"ArrowUp\":\n            moveUp();\n            launchingRandom();\n            break;\n        case \"ArrowDown\":\n            moveDown();\n            launchingRandom();\n            break;\n        default:\n            break;\n    }\n    if (!checkConnection() && !empty()) messageLose.classList.remove(\"hidden\");\n});\n\n//# sourceMappingURL=index.ccc2e8fc.js.map\n","'use strict';\n\nlet field = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nconst button = document.querySelector('button');\nconst start = document.querySelector('.start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst rowsArr = document.querySelectorAll('.field-row');\nconst cellsArr = document.querySelectorAll('.field-cell');\nconst gameScore = document.querySelector('.game-score');\nconst pointsToWin = 2048;\nconst width = 4;\nlet result = 0;\n\nfunction gameBeginning() {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  launchingRandom();\n  launchingRandom();\n}\n\nfunction empty() {\n  for (let row = 0; row < width; row++) {\n    for (let cell = 0; cell < width; cell++) {\n      if (field[row][cell] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nfunction withoutZero(quadrates) {\n  return quadrates.filter(item => item > 0);\n}\n\nconst squareValue = (place, num) => {\n  place.classList = `field-cell--${num} field-cell`;\n\n  if (num === 0) {\n    place.innerText = '';\n  }\n\n  if (num > 0) {\n    place.innerText = num;\n  }\n\n  if (num === pointsToWin) {\n    messageWin.classList.remove('hidden');\n  }\n};\n\nfunction launchingRandom() {\n  if (empty() === false) {\n    return;\n  }\n\n  let noEmptySpaces = false;\n\n  while (noEmptySpaces === false) {\n    const x = Math.floor(Math.random() * width);\n    const y = Math.floor(Math.random() * width);\n\n    if (field[x][y] === 0) {\n      const place = rowsArr[x].children[y];\n\n      if (Math.random() > 0.9) {\n        field[x][y] = 4;\n        squareValue(place, 4);\n      } else {\n        field[x][y] = 2;\n        squareValue(place, 2);\n      }\n\n      noEmptySpaces = true;\n    }\n  }\n}\n\nfunction connection(row) {\n  let arr = withoutZero(row);\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1]) {\n      arr[i] += arr[i + 1];\n      arr[i + 1] = 0;\n      result += arr[i];\n    }\n  }\n\n  gameScore.innerHTML = result;\n  arr = withoutZero(arr);\n\n  while (arr.length < width) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n\nfunction invert(items) {\n  return items.map((value, cell) => items.map(row => row[cell]));\n}\n\nfunction checkConnection() {\n  const invertField = invert([...field]);\n\n  for (let row = 0; row < width; row++) {\n    for (let cell = 0; cell < width - 1; cell++) {\n      if (field[row][cell] === field[row][cell + 1]\n      || invertField[row][cell] === invertField[row][cell + 1]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveRight() {\n  for (let row = 0; row < width; row++) {\n    const el = field[row].reverse();\n\n    const elAfterInvert = connection(el).reverse();\n\n    for (let cell = 0; cell < width; cell++) {\n      field[row] = elAfterInvert;\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nfunction moveLeft() {\n  for (let row = 0; row < width; row++) {\n    const el = field[row];\n\n    const elAfterInvert = connection(el);\n\n    for (let cell = 0; cell < width; cell++) {\n      field[row] = elAfterInvert;\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nfunction moveUp() {\n  for (let cell = 0; cell < width; cell++) {\n    const el = field.map(item => item[cell]);\n    const elAfterInvert = connection(el);\n\n    for (let row = 0; row < width; row++) {\n      field[row][cell] = elAfterInvert[row];\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let cell = 0; cell < width; cell++) {\n    const el = field.map(item => item[cell]).reverse();\n    const elAfterInvert = connection(el).reverse();\n\n    for (let row = 0; row < width; row++) {\n      field[row][cell] = elAfterInvert[row];\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nstart.addEventListener('click', () => {\n  if (start.classList.contains('start')) {\n    start.classList.remove('start');\n    start.classList.add('restart');\n    start.innerHTML = 'Restart';\n    messageStart.classList.add('hidden');\n    gameBeginning();\n  }\n\n  if (start.classList.contains('restart')) {\n    cellsArr.forEach(i => squareValue(i, 0));\n    messageLose.classList.add('hidden');\n    result = 0;\n    gameScore.innerHTML = result;\n    gameBeginning();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (button.innerText === 'Start') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowRight':\n      moveRight();\n      launchingRandom();\n      break;\n    case 'ArrowLeft':\n      moveLeft();\n      launchingRandom();\n      break;\n    case 'ArrowUp':\n      moveUp();\n      launchingRandom();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      launchingRandom();\n      break;\n    default:\n      break;\n  }\n\n  if (!checkConnection() && !empty()) {\n    messageLose.classList.remove('hidden');\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","field","button","document","querySelector","start","messageLose","messageWin","messageStart","rowsArr","querySelectorAll","cellsArr","gameScore","result","gameBeginning","launchingRandom","empty","row","cell","withoutZero","quadrates","filter","item","squareValue","place","num","classList","concat","innerText","remove","noEmptySpaces","x","Math","floor","random","y","children","connection","innerHTML","push","addEventListener","contains","add","forEach","e","key","moveRight","elAfterInvert","reverse","moveLeft","moveUp","_loop","map","moveDown","checkConnection","items","invertField","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","value","width"],"version":3,"file":"index.ccc2e8fc.js.map"}